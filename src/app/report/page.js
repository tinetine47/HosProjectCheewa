"use client";

import { useState } from "react";
import styles from "./report.module.css"; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ path ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

// ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏Ñ‡∏ß‡∏£‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å API ‡∏´‡∏£‡∏∑‡∏≠ State Management)
const reportData = [
  { id: "01", name: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢" },
  { id: "02", name: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢" },
  { id: "03", name: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤" },
  { id: "04", name: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï" },
  { id: "05", name: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡πÅ‡∏•‡∏∞/‡∏Ñ‡∏∑‡∏ô" },
  { id: "06", name: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô" },
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
];

// ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• pagination (‡∏Ñ‡∏ß‡∏£‡∏°‡∏≤‡∏à‡∏≤‡∏Å state ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì)
const paginationInfo = {
  currentPage: 1,
  totalPages: 5, // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
};

export default function ReportPage() { // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ Component ‡πÉ‡∏´‡πâ‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô (Optional)
  const [filter, setFilter] = useState("");
  // const [category, setCategory] = useState(""); // ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô UI ‡∏ô‡∏µ‡πâ
  // const [unit, setUnit] = useState("");       // ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô UI ‡∏ô‡∏µ‡πâ
  // const [storage, setStorage] = useState("");    // ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô UI ‡∏ô‡∏µ‡πâ

  const handleFilterChange = (event) => {
    setFilter(event.target.value);
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° logic ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• reportData ‡∏ï‡∏≤‡∏° filter ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
  const handlePdfClick = (reportId) => {
    console.log(`Generate PDF for report: ${reportId}`);
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° logic ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á PDF
  };

  const handleExcelClick = (reportId) => {
    console.log(`Generate Excel for report: ${reportId}`);
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° logic ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Excel
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
  const handlePageChange = (newPage) => {
      console.log(`Go to page: ${newPage}`);
      // ‡πÄ‡∏û‡∏¥‡πà‡∏° logic ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà ‡∏Ø‡∏•‡∏Ø
      // setPaginationInfo({...paginationInfo, currentPage: newPage}); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state
  }

  // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡πÜ) - ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
  const filteredData = reportData.filter(report =>
    report.name.toLowerCase().includes(filter.toLowerCase()) ||
    report.id.includes(filter)
  );

  return (
    <div className={styles.mainContainer}> {/* ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ class ‡πÉ‡∏´‡πâ‡∏™‡∏∑‡πà‡∏≠‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤ */}
      {/* ‡πÅ‡∏ñ‡∏ö‡∏ö‡∏ô (Header) */}
      <div className={styles.headerBar}>
        <h1>‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</h1>
        <div className={styles.searchContainer}>
          <input
            type="text"
            id="filter"
            className={styles.searchInput}
            value={filter}
            onChange={handleFilterChange}
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..." // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô placeholder ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á UI
          />
          {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà (‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ <img>, SVG, ‡∏´‡∏£‡∏∑‡∏≠ Icon Component) */}
          <span className={styles.searchIcon}>üîç</span> {/* ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
        </div>
      </div>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å (‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô) */}
      <div className={styles.reportTableContainer}>
        {/* ‡πÅ‡∏ñ‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á */}
        <div className={styles.tableHeader}>
          <div className={`${styles.headerItem} ${styles.colSequence}`}>‡∏•‡∏≥‡∏î‡∏±‡∏ö</div>
          <div className={`${styles.headerItem} ${styles.colReportName}`}>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</div>
          <div className={`${styles.headerItem} ${styles.colManage}`}>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</div>
        </div>

        {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô) */}
        <div className={styles.tableBody}>
          {filteredData.length > 0 ? (
            filteredData.map((report) => (
              <div className={styles.tableRow} key={report.id}>
                <div className={`${styles.tableCell} ${styles.colSequence}`}>{report.id}</div>
                <div className={`${styles.tableCell} ${styles.colReportName}`}>{report.name}</div>
                <div className={`${styles.tableCell} ${styles.colManage}`}>
                  {/* ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ Icon Components ‡∏à‡∏£‡∏¥‡∏á */}
                  <button onClick={() => handlePdfClick(report.id)} className={styles.iconButton}>
                    {/* <PdfIcon /> ‡∏´‡∏£‡∏∑‡∏≠ */} [P] {/* ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô PDF */}
                  </button>
                  <button onClick={() => handleExcelClick(report.id)} className={styles.iconButton}>
                    {/* <ExcelIcon /> ‡∏´‡∏£‡∏∑‡∏≠ */} [E] {/* ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô Excel */}
                  </button>
                </div>
              </div>
            ))
          ) : (
            <div className={styles.noResults}>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</div>
          )}
        </div>
      </div>

      {/* ‡∏™‡πà‡∏ß‡∏ô Pagination */}
      <div className={styles.paginationContainer}>
          <button
            onClick={() => handlePageChange(paginationInfo.currentPage - 1)}
            disabled={paginationInfo.currentPage === 1}
            className={styles.pageButton}
          >
            {"<"}
          </button>
          {/* ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô */}
          <button className={`${styles.pageButton} ${styles.activePage}`}>
            {paginationInfo.currentPage}
          </button>
          {/* ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ */}
          {paginationInfo.currentPage < paginationInfo.totalPages && (
             <button onClick={() => handlePageChange(paginationInfo.currentPage + 1)} className={styles.pageButton}>
               {paginationInfo.currentPage + 1}
             </button>
          )}
           {/* ‡∏≠‡∏≤‡∏à‡∏°‡∏µ ... ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ */}
          <button
            onClick={() => handlePageChange(paginationInfo.currentPage + 1)}
            disabled={paginationInfo.currentPage === paginationInfo.totalPages}
            className={styles.pageButton}
          >
            {">"}
          </button>
      </div>

    </div>
  );
}